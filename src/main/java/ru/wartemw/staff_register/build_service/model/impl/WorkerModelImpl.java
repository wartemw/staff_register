package ru.wartemw.staff_register.build_service.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import ru.wartemw.staff_register.build_service.model.Worker;
import ru.wartemw.staff_register.build_service.model.WorkerModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Worker service. Represents a row in the &quot;staff_register_Worker&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ru.wartemw.staff_register.build_service.model.WorkerModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WorkerImpl}.
 * </p>
 *
 * @author wARTEMw
 * @see WorkerImpl
 * @see ru.wartemw.staff_register.build_service.model.Worker
 * @see ru.wartemw.staff_register.build_service.model.WorkerModel
 * @generated
 */
public class WorkerModelImpl extends BaseModelImpl<Worker>
    implements WorkerModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a worker model instance should use the {@link ru.wartemw.staff_register.build_service.model.Worker} interface instead.
     */
    public static final String TABLE_NAME = "staff_register_Worker";
    public static final Object[][] TABLE_COLUMNS = {
            { "workerID", Types.BIGINT },
            { "surname", Types.VARCHAR },
            { "name", Types.VARCHAR },
            { "patronymic", Types.VARCHAR },
            { "gender", Types.VARCHAR },
            { "date_of_birth", Types.TIMESTAMP },
            { "date_of_employment", Types.TIMESTAMP },
            { "salary_level", Types.BIGINT },
            { "work_number", Types.BIGINT },
            { "telephone_number", Types.BIGINT },
            { "archival_status", Types.BOOLEAN },
            { "position_directoryID", Types.BIGINT },
            { "banking_organizationID", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table staff_register_Worker (workerID LONG not null primary key,surname VARCHAR(75) null,name VARCHAR(75) null,patronymic VARCHAR(75) null,gender VARCHAR(75) null,date_of_birth DATE null,date_of_employment DATE null,salary_level LONG,work_number LONG,telephone_number LONG,archival_status BOOLEAN,position_directoryID LONG,banking_organizationID LONG)";
    public static final String TABLE_SQL_DROP = "drop table staff_register_Worker";
    public static final String ORDER_BY_JPQL = " ORDER BY worker.workerID ASC";
    public static final String ORDER_BY_SQL = " ORDER BY staff_register_Worker.workerID ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.ru.wartemw.staff_register.build_service.model.Worker"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.ru.wartemw.staff_register.build_service.model.Worker"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.ru.wartemw.staff_register.build_service.model.Worker"),
            true);
    public static long BANKING_ORGANIZATIONID_COLUMN_BITMASK = 1L;
    public static long POSITION_DIRECTORYID_COLUMN_BITMASK = 2L;
    public static long WORKERID_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.ru.wartemw.staff_register.build_service.model.Worker"));
    private static ClassLoader _classLoader = Worker.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] { Worker.class };
    private long _workerID;
    private String _surname;
    private String _name;
    private String _patronymic;
    private String _gender;
    private Date _date_of_birth;
    private Date _date_of_employment;
    private long _salary_level;
    private long _work_number;
    private long _telephone_number;
    private boolean _archival_status;
    private long _position_directoryID;
    private long _originalPosition_directoryID;
    private boolean _setOriginalPosition_directoryID;
    private long _banking_organizationID;
    private long _originalBanking_organizationID;
    private boolean _setOriginalBanking_organizationID;
    private long _columnBitmask;
    private Worker _escapedModel;

    public WorkerModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _workerID;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setWorkerID(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _workerID;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Worker.class;
    }

    @Override
    public String getModelClassName() {
        return Worker.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("workerID", getWorkerID());
        attributes.put("surname", getSurname());
        attributes.put("name", getName());
        attributes.put("patronymic", getPatronymic());
        attributes.put("gender", getGender());
        attributes.put("date_of_birth", getDate_of_birth());
        attributes.put("date_of_employment", getDate_of_employment());
        attributes.put("salary_level", getSalary_level());
        attributes.put("work_number", getWork_number());
        attributes.put("telephone_number", getTelephone_number());
        attributes.put("archival_status", getArchival_status());
        attributes.put("position_directoryID", getPosition_directoryID());
        attributes.put("banking_organizationID", getBanking_organizationID());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long workerID = (Long) attributes.get("workerID");

        if (workerID != null) {
            setWorkerID(workerID);
        }

        String surname = (String) attributes.get("surname");

        if (surname != null) {
            setSurname(surname);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        String patronymic = (String) attributes.get("patronymic");

        if (patronymic != null) {
            setPatronymic(patronymic);
        }

        String gender = (String) attributes.get("gender");

        if (gender != null) {
            setGender(gender);
        }

        Date date_of_birth = (Date) attributes.get("date_of_birth");

        if (date_of_birth != null) {
            setDate_of_birth(date_of_birth);
        }

        Date date_of_employment = (Date) attributes.get("date_of_employment");

        if (date_of_employment != null) {
            setDate_of_employment(date_of_employment);
        }

        Long salary_level = (Long) attributes.get("salary_level");

        if (salary_level != null) {
            setSalary_level(salary_level);
        }

        Long work_number = (Long) attributes.get("work_number");

        if (work_number != null) {
            setWork_number(work_number);
        }

        Long telephone_number = (Long) attributes.get("telephone_number");

        if (telephone_number != null) {
            setTelephone_number(telephone_number);
        }

        Boolean archival_status = (Boolean) attributes.get("archival_status");

        if (archival_status != null) {
            setArchival_status(archival_status);
        }

        Long position_directoryID = (Long) attributes.get(
                "position_directoryID");

        if (position_directoryID != null) {
            setPosition_directoryID(position_directoryID);
        }

        Long banking_organizationID = (Long) attributes.get(
                "banking_organizationID");

        if (banking_organizationID != null) {
            setBanking_organizationID(banking_organizationID);
        }
    }

    @Override
    public long getWorkerID() {
        return _workerID;
    }

    @Override
    public void setWorkerID(long workerID) {
        _workerID = workerID;
    }

    @Override
    public String getSurname() {
        if (_surname == null) {
            return StringPool.BLANK;
        } else {
            return _surname;
        }
    }

    @Override
    public void setSurname(String surname) {
        _surname = surname;
    }

    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _name = name;
    }

    @Override
    public String getPatronymic() {
        if (_patronymic == null) {
            return StringPool.BLANK;
        } else {
            return _patronymic;
        }
    }

    @Override
    public void setPatronymic(String patronymic) {
        _patronymic = patronymic;
    }

    @Override
    public String getGender() {
        if (_gender == null) {
            return StringPool.BLANK;
        } else {
            return _gender;
        }
    }

    @Override
    public void setGender(String gender) {
        _gender = gender;
    }

    @Override
    public Date getDate_of_birth() {
        return _date_of_birth;
    }

    @Override
    public void setDate_of_birth(Date date_of_birth) {
        _date_of_birth = date_of_birth;
    }

    @Override
    public Date getDate_of_employment() {
        return _date_of_employment;
    }

    @Override
    public void setDate_of_employment(Date date_of_employment) {
        _date_of_employment = date_of_employment;
    }

    @Override
    public long getSalary_level() {
        return _salary_level;
    }

    @Override
    public void setSalary_level(long salary_level) {
        _salary_level = salary_level;
    }

    @Override
    public long getWork_number() {
        return _work_number;
    }

    @Override
    public void setWork_number(long work_number) {
        _work_number = work_number;
    }

    @Override
    public long getTelephone_number() {
        return _telephone_number;
    }

    @Override
    public void setTelephone_number(long telephone_number) {
        _telephone_number = telephone_number;
    }

    @Override
    public boolean getArchival_status() {
        return _archival_status;
    }

    @Override
    public boolean isArchival_status() {
        return _archival_status;
    }

    @Override
    public void setArchival_status(boolean archival_status) {
        _archival_status = archival_status;
    }

    @Override
    public long getPosition_directoryID() {
        return _position_directoryID;
    }

    @Override
    public void setPosition_directoryID(long position_directoryID) {
        _columnBitmask |= POSITION_DIRECTORYID_COLUMN_BITMASK;

        if (!_setOriginalPosition_directoryID) {
            _setOriginalPosition_directoryID = true;

            _originalPosition_directoryID = _position_directoryID;
        }

        _position_directoryID = position_directoryID;
    }

    public long getOriginalPosition_directoryID() {
        return _originalPosition_directoryID;
    }

    @Override
    public long getBanking_organizationID() {
        return _banking_organizationID;
    }

    @Override
    public void setBanking_organizationID(long banking_organizationID) {
        _columnBitmask |= BANKING_ORGANIZATIONID_COLUMN_BITMASK;

        if (!_setOriginalBanking_organizationID) {
            _setOriginalBanking_organizationID = true;

            _originalBanking_organizationID = _banking_organizationID;
        }

        _banking_organizationID = banking_organizationID;
    }

    public long getOriginalBanking_organizationID() {
        return _originalBanking_organizationID;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Worker.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Worker toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Worker) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        WorkerImpl workerImpl = new WorkerImpl();

        workerImpl.setWorkerID(getWorkerID());
        workerImpl.setSurname(getSurname());
        workerImpl.setName(getName());
        workerImpl.setPatronymic(getPatronymic());
        workerImpl.setGender(getGender());
        workerImpl.setDate_of_birth(getDate_of_birth());
        workerImpl.setDate_of_employment(getDate_of_employment());
        workerImpl.setSalary_level(getSalary_level());
        workerImpl.setWork_number(getWork_number());
        workerImpl.setTelephone_number(getTelephone_number());
        workerImpl.setArchival_status(getArchival_status());
        workerImpl.setPosition_directoryID(getPosition_directoryID());
        workerImpl.setBanking_organizationID(getBanking_organizationID());

        workerImpl.resetOriginalValues();

        return workerImpl;
    }

    @Override
    public int compareTo(Worker worker) {
        long primaryKey = worker.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Worker)) {
            return false;
        }

        Worker worker = (Worker) obj;

        long primaryKey = worker.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        WorkerModelImpl workerModelImpl = this;

        workerModelImpl._originalPosition_directoryID = workerModelImpl._position_directoryID;

        workerModelImpl._setOriginalPosition_directoryID = false;

        workerModelImpl._originalBanking_organizationID = workerModelImpl._banking_organizationID;

        workerModelImpl._setOriginalBanking_organizationID = false;

        workerModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Worker> toCacheModel() {
        WorkerCacheModel workerCacheModel = new WorkerCacheModel();

        workerCacheModel.workerID = getWorkerID();

        workerCacheModel.surname = getSurname();

        String surname = workerCacheModel.surname;

        if ((surname != null) && (surname.length() == 0)) {
            workerCacheModel.surname = null;
        }

        workerCacheModel.name = getName();

        String name = workerCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            workerCacheModel.name = null;
        }

        workerCacheModel.patronymic = getPatronymic();

        String patronymic = workerCacheModel.patronymic;

        if ((patronymic != null) && (patronymic.length() == 0)) {
            workerCacheModel.patronymic = null;
        }

        workerCacheModel.gender = getGender();

        String gender = workerCacheModel.gender;

        if ((gender != null) && (gender.length() == 0)) {
            workerCacheModel.gender = null;
        }

        Date date_of_birth = getDate_of_birth();

        if (date_of_birth != null) {
            workerCacheModel.date_of_birth = date_of_birth.getTime();
        } else {
            workerCacheModel.date_of_birth = Long.MIN_VALUE;
        }

        Date date_of_employment = getDate_of_employment();

        if (date_of_employment != null) {
            workerCacheModel.date_of_employment = date_of_employment.getTime();
        } else {
            workerCacheModel.date_of_employment = Long.MIN_VALUE;
        }

        workerCacheModel.salary_level = getSalary_level();

        workerCacheModel.work_number = getWork_number();

        workerCacheModel.telephone_number = getTelephone_number();

        workerCacheModel.archival_status = getArchival_status();

        workerCacheModel.position_directoryID = getPosition_directoryID();

        workerCacheModel.banking_organizationID = getBanking_organizationID();

        return workerCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(27);

        sb.append("{workerID=");
        sb.append(getWorkerID());
        sb.append(", surname=");
        sb.append(getSurname());
        sb.append(", name=");
        sb.append(getName());
        sb.append(", patronymic=");
        sb.append(getPatronymic());
        sb.append(", gender=");
        sb.append(getGender());
        sb.append(", date_of_birth=");
        sb.append(getDate_of_birth());
        sb.append(", date_of_employment=");
        sb.append(getDate_of_employment());
        sb.append(", salary_level=");
        sb.append(getSalary_level());
        sb.append(", work_number=");
        sb.append(getWork_number());
        sb.append(", telephone_number=");
        sb.append(getTelephone_number());
        sb.append(", archival_status=");
        sb.append(getArchival_status());
        sb.append(", position_directoryID=");
        sb.append(getPosition_directoryID());
        sb.append(", banking_organizationID=");
        sb.append(getBanking_organizationID());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(43);

        sb.append("<model><model-name>");
        sb.append("ru.wartemw.staff_register.build_service.model.Worker");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>workerID</column-name><column-value><![CDATA[");
        sb.append(getWorkerID());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>surname</column-name><column-value><![CDATA[");
        sb.append(getSurname());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>patronymic</column-name><column-value><![CDATA[");
        sb.append(getPatronymic());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>gender</column-name><column-value><![CDATA[");
        sb.append(getGender());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>date_of_birth</column-name><column-value><![CDATA[");
        sb.append(getDate_of_birth());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>date_of_employment</column-name><column-value><![CDATA[");
        sb.append(getDate_of_employment());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>salary_level</column-name><column-value><![CDATA[");
        sb.append(getSalary_level());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>work_number</column-name><column-value><![CDATA[");
        sb.append(getWork_number());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>telephone_number</column-name><column-value><![CDATA[");
        sb.append(getTelephone_number());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>archival_status</column-name><column-value><![CDATA[");
        sb.append(getArchival_status());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>position_directoryID</column-name><column-value><![CDATA[");
        sb.append(getPosition_directoryID());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>banking_organizationID</column-name><column-value><![CDATA[");
        sb.append(getBanking_organizationID());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
