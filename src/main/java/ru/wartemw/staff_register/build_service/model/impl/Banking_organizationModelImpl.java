package ru.wartemw.staff_register.build_service.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import ru.wartemw.staff_register.build_service.model.Banking_organization;
import ru.wartemw.staff_register.build_service.model.Banking_organizationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Banking_organization service. Represents a row in the &quot;staff_register_Banking_organization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ru.wartemw.staff_register.build_service.model.Banking_organizationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Banking_organizationImpl}.
 * </p>
 *
 * @author wARTEMw
 * @see Banking_organizationImpl
 * @see ru.wartemw.staff_register.build_service.model.Banking_organization
 * @see ru.wartemw.staff_register.build_service.model.Banking_organizationModel
 * @generated
 */
public class Banking_organizationModelImpl extends BaseModelImpl<Banking_organization>
    implements Banking_organizationModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a banking_organization model instance should use the {@link ru.wartemw.staff_register.build_service.model.Banking_organization} interface instead.
     */
    public static final String TABLE_NAME = "staff_register_Banking_organization";
    public static final Object[][] TABLE_COLUMNS = {
            { "banking_organizationID", Types.BIGINT },
            { "name", Types.VARCHAR },
            { "identification_code", Types.INTEGER },
            { "address", Types.VARCHAR },
            { "workerID", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table staff_register_Banking_organization (banking_organizationID LONG not null primary key,name VARCHAR(75) null,identification_code INTEGER,address VARCHAR(75) null,workerID LONG)";
    public static final String TABLE_SQL_DROP = "drop table staff_register_Banking_organization";
    public static final String ORDER_BY_JPQL = " ORDER BY banking_organization.banking_organizationID ASC";
    public static final String ORDER_BY_SQL = " ORDER BY staff_register_Banking_organization.banking_organizationID ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.ru.wartemw.staff_register.build_service.model.Banking_organization"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.ru.wartemw.staff_register.build_service.model.Banking_organization"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.ru.wartemw.staff_register.build_service.model.Banking_organization"),
            true);
    public static long WORKERID_COLUMN_BITMASK = 1L;
    public static long BANKING_ORGANIZATIONID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.ru.wartemw.staff_register.build_service.model.Banking_organization"));
    private static ClassLoader _classLoader = Banking_organization.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Banking_organization.class
        };
    private long _banking_organizationID;
    private String _name;
    private int _identification_code;
    private String _address;
    private long _workerID;
    private long _originalWorkerID;
    private boolean _setOriginalWorkerID;
    private long _columnBitmask;
    private Banking_organization _escapedModel;

    public Banking_organizationModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _banking_organizationID;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setBanking_organizationID(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _banking_organizationID;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Banking_organization.class;
    }

    @Override
    public String getModelClassName() {
        return Banking_organization.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("banking_organizationID", getBanking_organizationID());
        attributes.put("name", getName());
        attributes.put("identification_code", getIdentification_code());
        attributes.put("address", getAddress());
        attributes.put("workerID", getWorkerID());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long banking_organizationID = (Long) attributes.get(
                "banking_organizationID");

        if (banking_organizationID != null) {
            setBanking_organizationID(banking_organizationID);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        Integer identification_code = (Integer) attributes.get(
                "identification_code");

        if (identification_code != null) {
            setIdentification_code(identification_code);
        }

        String address = (String) attributes.get("address");

        if (address != null) {
            setAddress(address);
        }

        Long workerID = (Long) attributes.get("workerID");

        if (workerID != null) {
            setWorkerID(workerID);
        }
    }

    @Override
    public long getBanking_organizationID() {
        return _banking_organizationID;
    }

    @Override
    public void setBanking_organizationID(long banking_organizationID) {
        _banking_organizationID = banking_organizationID;
    }

    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _name = name;
    }

    @Override
    public int getIdentification_code() {
        return _identification_code;
    }

    @Override
    public void setIdentification_code(int identification_code) {
        _identification_code = identification_code;
    }

    @Override
    public String getAddress() {
        if (_address == null) {
            return StringPool.BLANK;
        } else {
            return _address;
        }
    }

    @Override
    public void setAddress(String address) {
        _address = address;
    }

    @Override
    public long getWorkerID() {
        return _workerID;
    }

    @Override
    public void setWorkerID(long workerID) {
        _columnBitmask |= WORKERID_COLUMN_BITMASK;

        if (!_setOriginalWorkerID) {
            _setOriginalWorkerID = true;

            _originalWorkerID = _workerID;
        }

        _workerID = workerID;
    }

    public long getOriginalWorkerID() {
        return _originalWorkerID;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Banking_organization.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Banking_organization toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Banking_organization) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        Banking_organizationImpl banking_organizationImpl = new Banking_organizationImpl();

        banking_organizationImpl.setBanking_organizationID(getBanking_organizationID());
        banking_organizationImpl.setName(getName());
        banking_organizationImpl.setIdentification_code(getIdentification_code());
        banking_organizationImpl.setAddress(getAddress());
        banking_organizationImpl.setWorkerID(getWorkerID());

        banking_organizationImpl.resetOriginalValues();

        return banking_organizationImpl;
    }

    @Override
    public int compareTo(Banking_organization banking_organization) {
        long primaryKey = banking_organization.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Banking_organization)) {
            return false;
        }

        Banking_organization banking_organization = (Banking_organization) obj;

        long primaryKey = banking_organization.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        Banking_organizationModelImpl banking_organizationModelImpl = this;

        banking_organizationModelImpl._originalWorkerID = banking_organizationModelImpl._workerID;

        banking_organizationModelImpl._setOriginalWorkerID = false;

        banking_organizationModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Banking_organization> toCacheModel() {
        Banking_organizationCacheModel banking_organizationCacheModel = new Banking_organizationCacheModel();

        banking_organizationCacheModel.banking_organizationID = getBanking_organizationID();

        banking_organizationCacheModel.name = getName();

        String name = banking_organizationCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            banking_organizationCacheModel.name = null;
        }

        banking_organizationCacheModel.identification_code = getIdentification_code();

        banking_organizationCacheModel.address = getAddress();

        String address = banking_organizationCacheModel.address;

        if ((address != null) && (address.length() == 0)) {
            banking_organizationCacheModel.address = null;
        }

        banking_organizationCacheModel.workerID = getWorkerID();

        return banking_organizationCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(11);

        sb.append("{banking_organizationID=");
        sb.append(getBanking_organizationID());
        sb.append(", name=");
        sb.append(getName());
        sb.append(", identification_code=");
        sb.append(getIdentification_code());
        sb.append(", address=");
        sb.append(getAddress());
        sb.append(", workerID=");
        sb.append(getWorkerID());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(19);

        sb.append("<model><model-name>");
        sb.append(
            "ru.wartemw.staff_register.build_service.model.Banking_organization");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>banking_organizationID</column-name><column-value><![CDATA[");
        sb.append(getBanking_organizationID());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>identification_code</column-name><column-value><![CDATA[");
        sb.append(getIdentification_code());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>address</column-name><column-value><![CDATA[");
        sb.append(getAddress());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>workerID</column-name><column-value><![CDATA[");
        sb.append(getWorkerID());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
